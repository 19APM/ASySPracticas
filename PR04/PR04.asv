%% Práctica 4: Señales en tiempo discreto
%
%
%% Integrantes
%
% Portillo Martínez Arturo
%
%% Objetivos
%
% * Manipulación básica de MATLAB.
% * Gráficas de señales reales y complejas discretas.
% * Transformación de señales discretas (escalamientos y traslaciones).
%
%% Introducción
%
% Se realizó la investigación del uso de Python para la realización de
% gráficas, a continuación se muestran las gráficas correspondientes al problema 1 mediante Python.
% 
% <<intro.png>>
%
% Se puede consultar el código realizado con Python en el siguiente <https://colab.research.google.com/drive/1XnKYDQmnbECtDmMwu0-lw2WxHoELL3KE?usp=sharing enlace>. 
%
%% Desarrollo
%
% A continuación se realizará el desarrollo de los siguientes problemas
% planteados para entregar en la práctica.
% 
% *1.* Resuelve el problema 3.11-2.
%
% *2.* Resuelve el problema 3.2-7, tenga cuidado en los escalamientos horizontales.
%
% *3.* Resuelva el problema 3.11-6.
%
% *4.* Con los programas desarrollados en el punto 3, resuelva 3.1-1 c) y 3.1-2 b).
%
% *5.* Construya una app que permita (consultar los ejemplos preconstruidos):
%
% * Gráficar señales en tiempo discreto reales, el usuario ingresa la definición de la señal en el formato especifico.
% * El usuario puede definir el intervalo de la gráfica.
% * El usuario puede seleccionar el tipo de transformación (horizontal, vertical o combinación) que desee realizar a la señal, la app deberá mostrar la gráfica de esta transformación.
% * Se adjunta una imagen de la app a la práctica, y el archivo de la app.
%
% No es necesario incluir conclusiones en esta práctica, si lo considera
% necesario puede incluir apéndices, no olvide incluir sus referencias.
%
%% Problema 1
%
% Resuelve el problema 3.11-2.
% 
% 3.11-2 Considere la función de tiempo discreto
%
% $$f[n] = e^{-n/5}cos(\pi n/5)u[n]$$
%
% La sección 3.11 utiliza funciones anónimas describiendo señales DT.
% 
% f = @(n) exp(-n/5).*cos(pi*n/5).*(n>=0)
%
% Si bien esta función anónima funciona correctamente para una operación de
% reducción de resolución como f[2n], no funciona correctamente durante una
% operación de muestreo superior, como f[n/2]. Modifica la función anónima
% f para que también se adapte correctamente a las operaciones de
% sobremuestreo. Pruebe su código computando y trazando:
%
% f(n/2) en (-10<=n<=10).

%% Problema 2
%
% Resuelve el problema 3.2-7, tenga cuidado en los escalamientos horizontales.
%
% 3.2-7 Para la siguiente señal mostrada grafique las siguientes señales
%
% *(a)* $$x[-n]$$
%
% *(b)* $$x[n+6]$$
%
% *(c)* $$x[n-6]$$
%
% *(d)* $$x[3n]$$
%
% *(e)* $$x[frac{n} 3]$$
%
% *(f)* $$x[3-n]$$
% 
% <<3.1-1b.png>>
% 
%% Problema 3
%
% Resuelva el problema 3.11-6.
%
% 3.11-6 Supongamos que existe un vector x en el espacio de trabajo de
% MATLAB, correspondiente a una señal DT x[n] de duración finita.
%
% *(a)* Escriba una función en MATLAB que, cuando pase el vector x, calcule
% y devuelva Ex, la energía de x[n].
%
% *(b)* Escriba una función en MATLAB que, cuando pase el vector x, calcule
% y devuelva Px, la potencia de x[n]. Suponiendo que x[n] es periódico y
% ese vector x contiene datos para un número entero de períodos de x[n].
%
%% Problema 4
%
% Con los programas desarrollados en el punto 3, resuelva 3.1-1 c) y 3.1-2 b).
%
% 3.1-1 Encuentre la energía 

%% Problema 5
%
% Construya una app que permita (consultar los ejemplos preconstruidos):
%
% * Gráficar señales en tiempo discreto reales, el usuario ingresa la definición de la señal en el formato especifico.
% * El usuario puede definir el intervalo de la gráfica.
% * El usuario puede seleccionar el tipo de transformación (horizontal, vertical o combinación) que desee realizar a la señal, la app deberá mostrar la gráfica de esta transformación.
% * Se adjunta una imagen de la app a la práctica, y el archivo de la app.
%
% <<app.png>>
% 

%
